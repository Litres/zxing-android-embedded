apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'


//ext.artifactId = 'zxing-android-embedded'

dependencies {
    api project.zxingCore

    api 'com.android.support:support-v4:27.1.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.9.5"
}

android {
    resourcePrefix 'zxing_'
    compileSdkVersion project.androidTargetSdk
    buildToolsVersion project.androidBuildTools

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res-orig', 'res']
            assets.srcDirs = ['assets']
        }
        test.setRoot('test');
    }

    // This is bad practice - we should fix the warnings instead.
    lintOptions {
        // Android warns about the he and id locale folders. he -> iw is already handled with a
        // symlink. TODO: what about id?
        disable 'LocaleFolder'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        // We test with primitives such as Rect, and rely on their default behaviour working.
        unitTests.returnDefaultValues = true
    }
    defaultConfig {
        minSdkVersion 14
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"
        }
        release {
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }
    }
}

ext {
    bintrayRepo = 'zxing-android'
    bintrayName = 'zxing-android'

    publishedGroupId = 'ru.litres'
    libraryName = 'zxing-android-embedded'
    artifact = 'zxing-android-embedded'

    libraryDescription = 'ZXing library modified from journeyapps for Android'

    siteUrl = 'https://github.com/Litres/zxing-android-embedded'
    gitUrl = 'https://github.com/Litres/zxing-android-embedded.git'

    libraryVersion = '3.6.1'

    developerId = 'shramov'
    developerName = 'ShramovAlex'
    developerEmail = 'shramov.alexandr@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }

                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

artifacts {
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
